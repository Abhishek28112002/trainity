<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

  <meta name="author" content="Webpixels" />
  <title>Trainity - Admin Panel</title>
  <!-- Favicon -->
  <link rel="icon" href="../img/custom/favicon-32x32.jpg" type="image/png" />
  <!-- Purpose CSS -->

  <!-- Font Awesome 5 -->
  <link rel="stylesheet" href="../libs/@fortawesome/fontawesome-free/css/all.min.css" />

  <link rel="stylesheet" href="../libs/fullcalendar/dist/fullcalendar.min.css" />
  <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="../../assets/libs/flatpickr/dist/flatpickr.min.css">
  <link rel="stylesheet" href="//cdn.quilljs.com/1.3.6/quill.bubble.css" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@500&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="../css/purpose.css" id="stylesheet" />
  <style>
   
input{
background: transparent;

}
    select {
      border: none;
      background-color: transparent;
    }

    .status {
      height: 24px;
      cursor: pointer;
      display: flex;
      padding: 2px 10px;
      justify-content: center;
      align-items: center;
      border-radius: 16px;
    }

    .selected {
      border-radius: 4px;
      background: var(--success-50, #ECFDF3);
    }

    /*track*/
    ::-webkit-scrollbar-track {
      background: transparent;
    }

    /*thumb*/
    ::-webkit-scrollbar-thumb {
      background: transparent;
    }

    .tabbody {
      display: flex;
      flex-direction: column;
      gap: 32px;
    }

    
    th,
    td {
      color: var(--gray-600, #475467);
      font-size: 12px;
      font-style: normal;
      font-weight: 500;
      line-height: 18px;
      /* 150% */
    }



    td {
      font-size: 16px;
    }

    th:first-child,
    td:first-child {
      display: flex;
      justify-content: flex-start;
    }

    th:last-child,
    td:last-child {
      display: flex;
      justify-content: flex-end;
    }

    th,
    td {
      white-space: nowrap;
    }

    body {
      font-family: 'Manrope', sans-serif !important;
    }

    .ProgressTs {
      height: 8px;
      flex-shrink: 0;
      width: 120px;
      border-radius: 4px;
      background: var(--success-100, #D1FADF);
    }

    .progress__bar {
      height: 100%;
      background: #48bf84;
      transition: all 0.2s;
      border-radius: 4px;
    }

    .progressTaskProject {
      height: 8px;
      flex-shrink: 0;
      width: 80%;
      border-radius: 4px;
      background: var(--success-100, #D1FADF);
    }

    .progress__fill {
      width: 30%;
      height: 100%;
      background: #48bf84;
      transition: all 0.2s;
      border-radius: 4px;
    }

    .textarea {
      display: flex;
      padding: 14px 20px;
      align-items: center;
      gap: 10px;
      align-self: stretch;
      color: var(--gray-500, #667085);
      font-size: 14px;
      font-style: normal;
      height: 48px;
      font-weight: 500;
      line-height: normal;
      letter-spacing: 0.21px;
      border-radius: 12px;
      border: 1px solid #ECECEC;
      background: #FFF;
    }

    .tabbox {
      display: flex;
      padding: 12px;
      justify-content: center;
      align-items: center;
      gap: 8px;
      font-size: 14px;
      color: var(--gray-500, #667085);
      font-style: normal;
      font-weight: 600;
      line-height: 20px;
      cursor: pointer;
    }

    .activePiller {
      border-bottom: 4px solid #48BF84;
      background: var(--success-50, #ECFDF3);
      color: #48bf84;
    }

    .normalText {
      color: var(--gray-500, #667085);
    }

    .activeTab {
      display: flex;
      padding: 24px;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 20px;
      color: #48BF84;
      border-bottom: 4px solid #48BF84;
      background: var(--success-50, #ECFDF3)
    }


    .activeText {
      color: #48BF84
    }

    .create-project_btn {
      display: flex;
      padding: 10px 16px;
      justify-content: center;
      align-items: center;
      gap: 8px;
      color: var(--White, #FFF);
      background: #48bf84;
      font-size: 16px;
      font-style: normal;
      font-weight: 700;
      line-height: 24px;
      /* 150% */
      border-radius: var(--radius-medium, 8px);
      box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05);
    }
  </style>

  <!-- Hotjar Tracking Code for Admin Website -->
  <script>
    (function(h, o, t, j, a, r) {
      h.hj = h.hj || function() {
        (h.hj.q = h.hj.q || []).push(arguments)
      };
      h._hjSettings = {
        hjid: 3534926,
        hjsv: 6
      };
      a = o.getElementsByTagName('head')[0];
      r = o.createElement('script');
      r.async = 1;
      r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
      a.appendChild(r);
    })(window, document, 'https://static.hotjar.com/c/hotjar-', '.js?sv=');
  </script>

</head>

<body class="application application-offset" style="margin-left:300px;width: calc(100vw - 300px);background: #fafafa;display: flex;
padding: 0px 32px;
flex-direction: column;
align-items: flex-start;
flex: 1 0 0;" id="MainPageContent">

  <!-- Chat modal -->
  <!-- Sidenav -->
  <%- include('partials/sidepanel'); -%>
  <!-- Content -->
  <div class="main-content position-relative" style="margin-top:0px;display: flex;
    flex-direction: column;
    gap: 12px;">

    <%- include('partials/utility-modals'); -%>


    <div style="display: flex;gap:8px;align-items:center; color: var(--gray-600, #475467);">
      <div class="tabbox activeTab" onclick="ChangeTab(['Projects','Tasks','OKRs'],'Projects')" id="ProjectsTab">
        Projects</div>
      <div class="tabbox" onclick="ChangeTab(['Projects','Tasks','OKRs'],'Tasks')" id="TasksTab"> Tasks</div>
      <div class="tabbox" onclick="ChangeTab(['Projects','Tasks','OKRs'],'OKRs')" id="OKRsTab"> OKRs</div>

    </div>


    <%function ChangeDate(startDate,endDate) {
      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
      const dateObject = new Date(startDate);

      const month = months[dateObject.getMonth()];
      const day = dateObject.getDate();
      let dateObject1 = new Date(endDate);
      const year = dateObject1.getFullYear();
      const month1 = months[dateObject1.getMonth()];
      const day1= dateObject1.getDate();
      return `${day} ${month} to ${day} ${month} ${year}`;
    }%>
    <div id="ProjectsBody" class="tabbody" style="display: flex;">
      <div style="display: flex;gap:8px;align-items:center; color: var(--gray-600, #475467);">
        <div class="tabbox <%=activeTab!='ProjectSubmission'?'activeTab':''%>" onclick="ChangeTab(['Project','ProjectSubmission'],'Project')" id="ProjectTab">Projects</div>
        <div class="tabbox <%=activeTab=='ProjectSubmission'?'activeTab':''%>" onclick="ChangeTab(['Project','ProjectSubmission'],'ProjectSubmission')" id="ProjectSubmissionTab"> Project Submission</div>
      </div>
      <div 
    style="display: <%=activeTab!='ProjectSubmission'?'flex':'none'%>;
    justify-content: space-between;
    align-items: center;
    flex-direction: column;
    align-self: stretch;" id="ProjectBody">
        <div style="display: flex;justify-content: space-between;
    align-items: center;
   margin-bottom: 32px;
    align-self: stretch;">
          <div style="display: flex;
    width: 300px;
    height: 44px;
padding: 10px 14px;
align-items: center;
gap: 8px;
align-self: stretch;

    justify-content: center;
    align-items: center;border-radius: var(--radius-medium, 8px);
border: 1px solid var(--gray-300, #D0D5DD);
background: var(--White, #FFF);
box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05);">
            <img src="../Project icons/Search_icon.svg">
            <input type="text" style="border: none;width: 100%;" id="SearchProject" oninput="SearchProject()">
          </div>
          <% if(projects.length> 0) { %>
          <div class="create-project_btn" style=" cursor: pointer;" data-target="#CreateProject" data-toggle="modal"><span style="width: 24px;
 height: 24px;"><i class="fa fa-plus" aria-hidden="true"></i></span>Create Projects</div>

          <%}%>
              </div>
              <% let EmployeeMap=new Map();%>
          <% let EmployeeImageMap=new Map();%>
          <%for(let employee of employeeList){%>
          <% EmployeeMap.set(employee._id.toString(),employee.displayName);%>
          <% EmployeeImageMap.set(employee._id.toString(),employee.image);%>
          <%}%>
                          <% function countWeeksBetweenDates(startDate, endDate) {%>
          <% startDate=new Date(startDate)%>
          <% endDate=new Date(endDate) %>
          <% const timeDifference=endDate - startDate;%>
          <% const millisecondsPerWeek=7 * 24 * 60 * 60 * 1000;%>
          <% const weeks=Math.ceil(timeDifference / millisecondsPerWeek);%>
          <% return Math.abs(weeks)%>
          <% }%>
          <% if(projects.length> 0) { %>
          <div style="display: flex;
  align-items: flex-start;
  gap: 16px;
  flex-wrap: wrap;
  align-self: stretch;">
            <% for(let project of projects) { %>
              <% let imagelink='../img/Project no Image placeholder.svg' %>
              <% if(project.ResultFile && project.ResultFile.link?.length>0){%>
                <% imagelink=project.ResultFile.link%>
                <%}%>
            <a href="/projectOne/<%=project._id%>" class="project" style="max-width:400px;display: flex;

  flex-direction: column;
  align-items: flex-start;
  gap: 16px;
  flex: 1 0 0;
  border-radius: 12px;
  border: 1px solid var(--gray-300, #D0D5DD);
  background: #FFF;">
              <div style="border-radius: 12px 12px 0px 0px;width: 100%;overflow: hidden;">
                <img src="<%=imagelink%>" style="width:400px;height:250px;">
              </div>
              <div style="display: flex;
  padding: 12px 16px;
  flex-direction: column;
  align-items: flex-start;
  gap: 16px;
  align-self: stretch;">
                <div style="display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 16px;
  align-self: stretch;">
                  <div style="display: flex;gap:4px;align-items: center;">
                    <img src="../Performance dashboard Icons/calander.svg">
                    <div style="color: var(--gray-500, #667085);
  font-size: 16px;
  font-style: normal;
  font-weight: 600;
  line-height: 24px; /* 150% */">
                      <%=ChangeDate(project.startDate,project.endDate)%> 
                      :<%=countWeeksBetweenDates(project.startDate,project.endDate)%>
                      weeks
                    </div>
                  </div>
                  <div style="color: var(--gray-900, #101828);
  font-size: 20px;
  font-style: normal;
  font-weight: 700;
  line-height: 30px; /* 150% */" class="projecttitle">
                    <%=project.title%>
                  </div>
                  <div class="Projects" style="display: flex;
  align-items: center;
  gap: 12px;
  justify-content: space-between;
  align-self: stretch;">
                    <div class="progressTaskProject">
                      <div class="progress__fill" style="width: <%=project.progress%>%;"></div>
                    </div>
                    <div style="color: var(--gray-700, #344054);
  font-size: 14px;
  font-style: normal;
  font-weight: 600;
  line-height: 28px; /* 200% */"><%=project.progress%>%</div>

                  </div>
                  <div style="display: flex;
  align-items: center;overflow: hidden;">

  <% for(let id of project.owners){%>
                   <img style="
                   display: flex;
                   width: 32px;
                   height: 32px;
                   margin-left: -10px;
                   flex-direction: column;
                   justify-content: center;
                   align-items: center;
                   flex-shrink: 0;
                   border-radius: 200px;
                   border: 1.5px solid var(--White, #FFF)"
                   src="<%=EmployeeImageMap.get(id)%>">
                   <%}%>
                   <% for(let index=0;index<project.teams?.length;index++){%>
                    <% let team=project.teams[index];%>
                    
                    <% for(let id of team.employees||[]){%>
                    <img style="
                    display: flex;
                    width: 32px;
                    height: 32px;
                    margin-left: -10px;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    flex-shrink: 0;
                    border-radius: 200px;
                    border: 1.5px solid var(--White, #FFF)"
                    src="<%=EmployeeImageMap.get(id)%>">
                    <%}%>
                    <%}%>
 
                  </div>
                </div>

              </div>

            </a>
            <%}%>
                                            </div>
                                            <%} else{%>
            <div style="display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
height: 80vh;
width: 100%;
gap: 17px;
flex: 1 0 0;
align-self: stretch;">
              <img src="../Project icons/Projects Empty state - Manager view.svg">
              <div style="display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
gap: 12px;">
                <div style="color: #363636;
font-size: 20px;
font-style: normal;
cursor: pointer;
font-weight: 700;
line-height: 22px; /* 110% */">Create Projects for Team</div>
                <div style="width: min(100%,500.652px);
color: #363636;
text-align: center;
font-size: 18px;
font-style: normal;
font-weight: 500;
line-height: 135%; /* 24.3px */
letter-spacing: 0.18px;">
                  Right now, it's a clean slate, but you can begin creating and
                  assigning projects to your entire team.
                </div>
              </div>
              <div class="create-project_btn" data-target="#CreateProject" data-toggle="modal" style="cursor: pointer;"><i class="fa fa-plus " aria-hidden="true"></i>Create Projects</div>
            </div>
            <%}%>
            </div>
            <div id="ProjectSubmissionBody" style="display: <%=activeTab=='ProjectSubmission'?'flex':'none'%>;"></div>
          </div>
          <%- include('partials/Task_Manager') -%>
            <%- include('partials/OKRs') -%>


            <!-- Create Project Modal -->

            <div class="modal fade docs-example-modal-xl" tabindex="-1" role="dialog" id="CreateProject" aria-labelledby="myLargeModalLabel" aria-hidden="true">
              <div class="modal-dialog modal-dialog-centered modal-xl">
                <div class="modal-content">
                  <div class="modal-header" style="display: flex;width: 100%;justify-content: space-between;align-items: center;">
                    <div style="color: var(--gray-900, #101828);
font-size: 16px;
font-style: normal;
font-weight: 700;
line-height: normal;">New Project</div>
                    <img src="../img/icons performance mgmt/desktop/close_40x40.svg" data-dismiss="modal">
                  </div>

                  <div class="modal-body" style="display: flex;
        padding: 20px 32px;
        flex-direction: column;
        overflow: auto;
        max-height: 70vh;
        align-items: flex-start;
        gap: 32px;">
                    <input type="text" style="display: flex;
        align-items: center;
        gap: 32px;
        border: none;
        padding: 10px 0px;
        align-self: stretch;color: var(--gray-900, #101828);
       font-size: 24px;
       font-style: normal;
       font-weight: 700;
       line-height: normal;" placeholder="Project Title(Click to Edit)" onchange="ChangeProjectData('title',event.target.value)" id="Project_Title">
                    <div style="display: flex;
       flex-direction: column;
       align-items: flex-start;
       gap: 8px;">
                      <div style="color: var(--gray-800, #1D2939);
       
       font-size: 16px;
       font-style: normal;
       font-weight: 600;
       line-height: normal;">Timeline</div>
                      <div style="display: flex;
       align-items: center;
       gap: 8px;
       align-self: stretch;">
                        <img src="../Performance dashboard Icons/calander.svg">
                        <div style="color: var(--gray-600, #475467);
      
      font-size: 14px;
      font-style: normal;
      font-weight: 500;
      line-height: normal;">
                          Start Date
                        </div>
                        <input style="display: flex;
      height: 48px;
      padding: 14px 20px;
      align-items: center;
      gap: 10px;
      color: var(--gray-500, #667085);
/* Text sm/Normal */

font-size: 14px;
font-style: normal;
font-weight: 400;
line-height: 20px; /* 142.857% */

      border-radius: 12px;
      border: 1px solid var(--gray-300, #D0D5DD);
      background: #FFF;" type="date" onchange="ChangeProjectData('startDate',event.target.value)" id="Project_StartDate">
                        <div style="color: var(--gray-600, #475467);
      
      font-size: 14px;
      font-style: normal;
      font-weight: 500;
      line-height: normal;">
                          Due Date
                        </div>
                        <input style="display: flex;
      height: 48px;
      padding: 14px 20px;
      align-items: center;
      gap: 10px;
      color: var(--gray-500, #667085);
/* Text sm/Normal */

font-size: 14px;
font-style: normal;
font-weight: 400;
line-height: 20px; /* 142.857% */

      border-radius: 12px;
      border: 1px solid var(--gray-300, #D0D5DD);
      background: #FFF;" type="date" onchange="ChangeProjectData('endDate',event.target.value)" id="Project_EndDate">
                      </div>
                    </div>

                    <div style="
            display: flex;
            align-items: flex-start;
            gap: 32px;
            justify-content: space-between;
            width: 100%;
            align-self: stretch;
          ">
                      <div style="display: flex; flex-direction: column; gap: 8px; width: 40%">
                        <div style="
                color: var(--gray-800, #1d2939);
                font-size: 14px;
                font-style: normal;
                font-weight: 600;
                line-height: normal;
              ">
                          Project owner
                        </div>
                        <input type="text"  class="select_box"
                        style="display: flex; flex-wrap: wrap; gap: 12px" oninput="SearchProjectOwners(event.target.value)" class="select_box" style="display: flex" data-toggle="dropdown" aria-expanded="false" id="ProjectOwners" />
                        <div class="dropdown-menu" style="
                max-height: 300px;
                min-width:250px;
                max-width: max(300px, 50%);
                overflow: auto;
                flex-direction: column;
                margin-top: 200px;
              " aria-labelledby="ProjectOwners" id="DropDownProjectOwners">
                          <%for(let employee of employeeList){%>
                          <div style="
                  display: flex;
                  padding: 8px;
                  cursor: pointer;
                  align-items: center;
                  gap: 10px;
                  align-self: stretch;
                " onclick="SelectProjectOwner('<%=employee._id.toString()%>','<%=employee.displayName%>')">
                            <img style="
                    display: flex;
                    width: 32px;
                    height: 32px;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    border-radius: 200px;
                  " src="<%=employee.image%>" />
                            <div style="
                    display: flex;
                    flex-direction: column;
                    white-space: nowrap;
                    align-items: flex-start;
                  ">
                              <div style="
                      color: var(--gray-700, #344054);
                      font-size: 14px;
                      font-style: normal;
                      font-weight: 600;
                      line-height: 20px; /* 142.857% */
                    ">
                                <%=employee.displayName%>
                              </div>
                              <div style="
                      color: var(--gray-500, #667085);
                      
                      font-size: 12px;
                      font-style: normal;
                      font-weight: 400;
                      line-height: 18px; /* 150% */
                    ">
                                <%=employee.team%>
                              </div>
                            </div>
                          </div>

                          <div style="
                  height: 1px;
                  align-self: stretch;
                  background: var(--gray-200, #eaecf0);
                "></div>
                          <%}%>
                          </div>
                        </div>

                        <div style="display: flex; flex-direction: column; gap: 8px; width: 60%">
                          <div style="
                color: var(--gray-800, #1d2939);
                font-size: 14px;
                font-style: normal;
                font-weight: 600;
                line-height: normal;
              ">
                            Teams and Members
                          </div>
                          <div class="select_box" style="display: flex; flex-wrap: wrap; gap: 12px"
                            data-toggle="dropdown" aria-expanded="false" id="Teams">
                            <div id="ProjectTeamSelected" style="
                  display: flex;
                  gap: 8px;
                  align-items: center;
                  flex-wrap: wrap;
                "></div>
                           <input type="text" style="
              width: 200px;
              border: none;
              height: 30px;
            " oninput="SearchProjectTeams(event.target.value)" />
                           

                          </div>
                          <div class="dropdown-menu" style="
                max-height: 300px;
                min-width: 250px;
                overflow: auto;
                flex-direction: column;
                margin-top: 250px;
              " aria-labelledby="Teams" id="DropDownProjectTeams">
                            <% for(let team of teams){%>
                          <div style="
                  display: flex;
                  padding: 8px;
                  align-items: center;
                  gap: 10px;
                  align-self: stretch;
                  cursor: pointer;
                " onclick="SelectProjectTeams('team','<%=team.title%>','<%=team._id%>')">
                            <img src="../Performance dashboard Icons/teams_icon.svg" />
                            <div style="
                    display: flex;
                    flex-direction: column;
                    align-items: flex-start;
                  ">
                              <div style="
                      color: var(--gray-700, #344054);
                      
                      font-size: 14px;
                      font-style: normal;
                      font-weight: 600;
                      line-height: 20px; /* 142.857% */
                    ">
                                <%=team.title%>
                              </div>
                              <div style="
                      display: -webkit-box;
width: 85px;
-webkit-box-orient: vertical;
-webkit-line-clamp: 1;
overflow: hidden;
color: var(--text-content-secondary, #898989);
text-overflow: ellipsis;

font-size: 14px;
font-style: normal;
font-weight: 600;
line-height: normal;
                    ">
                                <% for(let employeeId of team.employees) {%>
                                <%=EmployeeMap.get(employeeId)%> , <%}%>
                                  </div>
                                </div>
                              </div>
                              <%}%>
                                <%for(let employee of employeeList){%>
                                <div style="
                  display: flex;
                  padding: 8px;
                  cursor: pointer;
                  align-items: center;
                  gap: 10px;
                  align-self: stretch;
                " onclick="SelectProjectTeams(['<%=employee._id%>'],'<%=employee.displayName%>','<%=employee._id%>')">
                                  <img style="
                    display: flex;
                    width: 32px;
                    height: 32px;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    border-radius: 200px;
                  " src="<%=employee.image%>" />
                                  <div style="
                    display: flex;
                    flex-direction: column;
                    white-space: nowrap;
                    align-items: flex-start;
                  ">
                                    <div style="
                      color: var(--gray-700, #344054);
                      font-size: 14px;
                      font-style: normal;
                      font-weight: 600;
                      line-height: 20px; /* 142.857% */
                    ">
                                      <%=employee.displayName%>
                                    </div>
                                    <div style="
                      color: var(--gray-500, #667085);
                      
                      font-size: 12px;
                      font-style: normal;
                      font-weight: 400;
                      line-height: 18px; /* 150% */
                    ">
                                      <%=employee.team%>
                                    </div>
                                  </div>
                                </div>
                                <div style="
                  height: 1px;
                  align-self: stretch;
                  background: var(--gray-200, #eaecf0);
                "></div>
                                <%}%>
                          </div>
                        </div>
                      </div>
                      <div style="display: flex;
          flex-direction: column;
          width: 100%;
          align-items: flex-start;
          gap: 8px;">
                        <div style="color: var(--gray-800, #1D2939);
        font-size: 16px;
        font-style: normal;
        font-weight: 600;
        line-height: normal;">Objective</div>

                        <div class="textarea" id="ObjectiveBody" data-toggle="dropdown" aria-expanded="false"></div>
                        <div class="dropdown-menu" style="
  max-height: 300px;
  width: 95%;
  overflow: auto;
  flex-direction: column;
  margin-top: 300px;
" aria-labelledby="ObjectiveBody" id="DropDownObjectiveBody">

                          <% for(let [pillerid,objectives] of okrsmap) { %>
                                <% for(let objective of objectives){%>
                                <div style="
  display: flex;
width: 100%;
padding: 12px 16px;
flex-direction:column;
border-bottom: 1px solid var(--gray-300, #D0D5DD);
background: #FFF;
" onclick="SetObjective('<%=objective?._id%>',' <%= objective?.title%>')">
                                  <div style="color: var(--gray-900, #101828);
font-size: 16px;
font-style: normal;
font-weight: 500;
line-height: 18px; /* 112.5% */
letter-spacing: 0.24px;">
                                    <%= objective?.title%>
                                  </div>
                                  <div style="display: flex;align-items: center;gap:8px;">
                                    <div style="color: var(--gray-500, #667085);

font-size: 14px;
font-style: normal;
font-weight: 400;
line-height: 20px; /* 142.857% */
letter-spacing: 0.21px;">
                                      <%=objective?.timePeriod?.startDate%>-<%=objective?.timePeriod?.endDate%>
                                    </div>
                                  </div>
                                </div>
                                <%}%>
                            <%}%>
                              </div>
                            </div>
                            <div style="display: flex;
          flex-direction: column;
          width: 100%;
          align-items: flex-start;
          gap: 8px;">
                              <div style="color: var(--gray-800, #1D2939);
        font-size: 16px;
        font-style: normal;
        font-weight: 600;
        line-height: normal;">Key Results</div>

                              <div class="textarea" id="KRSBody" style="flex-wrap: wrap;padding-bottom:10px ;" data-toggle="dropdown" aria-expanded="false"></div>
                              <div class="dropdown-menu" style="
  max-height: 300px;
  width: 95%;
  overflow: auto;
  flex-direction: column;
  margin-top: 300px;
" aria-labelledby="KRSBody" id="DropDownKrs">

                              </div>
                            </div>

                            <div style="display: flex;
    flex-direction: column;
    width: 100%;
    align-items: flex-start;
    gap: 8px;">
                              <div style="color: var(--gray-800, #1D2939);
  
  font-size: 16px;
  font-style: normal;
  font-weight: 600;
  line-height: normal;">Description</div>
                              <textarea class="textarea" placeholder="Briefly describe the task you accomplished this week in maximum 1 or 2 lines" onchange="ChangeProjectData('description',event.target.value)" id="Project_Description"></textarea>
                            </div>


                            <div style="display: flex;
flex-direction: column;
align-items: flex-start;
gap: 8px;
align-self: stretch;
">
                              <div style="color: var(--gray-800, #1D2939);

font-size: 16px;
font-style: normal;
font-weight: 600;
line-height: normal;">Attach files and links</div>
                              <div style="display: flex;align-items: center;gap:8px;flex-wrap: wrap;" id="Project_LinkFileBody">

                              </div>
                              <div style="display: flex;
align-items: flex-start;
gap: 8px;">
                                <div style="display: flex;
width: 103px;
height: 52px;
padding: 16px 24px;
justify-content: center;
align-items: center;
gap: 10px;
background: #FFF;" onclick="OpenFileInput('FileInputFild')">
                                  <input type="file" id="FileInputFild" style="width: 0px;" onchange="handleProjectFileSelect(event)" accept="application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint,
                text/plain, application/pdf, image/*">
                                  <img src="../Performance dashboard Icons/File.svg">
                                  <img src="../Performance dashboard Icons/AddMedia.svg">
                                </div>
                                <div style="display: flex;
width: 103px;
height: 52px;
padding: 16px 24px;
justify-content: center;
align-items: center;
gap: 10px;
background: #FFF;" data-target="#AddProjectLink" data-toggle="modal">
                                  <img src="../Performance dashboard Icons/Link.svg">
                                  <img src="../Performance dashboard Icons/AddMedia.svg">
                                </div>
                              </div>
                            </div>
                          </div>

                          <div class="modal-footer" style="padding: 0.5rem">
                            <button class="btn btn-outline-primary" style="display: flex;
width: 189px;
padding: 16px 40px;
justify-content: center;
align-items: center;
gap: 8px;
align-self: stretch;
border-radius: 12px;" data-dismiss="modal"> Cancel</button>
                            <button class="btn btn-primary" style="display: flex;
width: 189px;
padding: 16px 40px;
justify-content: center;
align-items: center;
gap: 8px;
align-self: stretch;
border-radius: 12px;" data-dismiss="modal" onclick="CreateProject()" id="Project_Submit">Submit</button>

                          </div>

                        </div>
                      </div>
                    </div>
                    <!-- Add Project Link -->
                    <div class="modal fade docs-example-modal-lg" tabindex="-1" role="dialog" id="AddProjectLink" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                      <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content" style="background-color: #FAFAFA;">
                          <div class="modal-header" style="display: flex;width: 100%;justify-content: space-between;align-items: center;">
                            <div style="color: var(--gray-900, #101828);
  font-size: 24pxpx;
  font-style: normal;
  font-weight: 700;
  line-height: normal;">Add Link</div>
                            <img src="../img/icons performance mgmt/desktop/close_40x40.svg" data-dismiss="modal">
                          </div>
                          <div class="modal-body" style="display: inline-flex;
          padding-top: 24px;
          flex-direction: column;
          align-items: flex-start;
          gap: 22px;
          border-radius: 12px;">
                            <div style="display: flex;
           width: 100%;
           align-items: center;
           gap: 22px;">
                              <div style="color: var(--content-on-light-primary, #181818);
           width: 100px;
           font-size: 16px;
           font-style: normal;
           font-weight: 600;
           line-height: normal;">Link Title</div>
                              <input type="text" id="link-title" placeholder="Design_draft1" style="width:100%;padding:10px;margin:15px 0px;border-radius: var(--radius-medium, 8px);
              border: 1px solid var(--stroke-secondary, #DCDCDC);
              background: var(--surface-primary, #FFF);" onchange="ChangeLinkContent('title',event.target.value)">
                            </div>
                            <div style="display: flex;
    width: 100%;
    align-items: center;
    gap: 22px;">
                              <div style="color: var(--content-on-light-primary, #181818);
    width: 100px;
    font-size: 16px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;">Link </div>
                              <input type="link" id="link-link" placeholder="www.figma.com/file/4E5bk36Ib1giid=4861%3A134681&m" style="width:100%;padding:10px;margin:15px 0px;border-radius: var(--radius-medium, 8px);
              border: 1px solid var(--stroke-secondary, #DCDCDC);
              background: var(--surface-primary, #FFF);" onchange="ChangeLinkContent('url',event.target.value)" required>
                            </div>
                          </div>
                          <div class="modal-footer" style="padding:0.5rem">

                            <button type="button" style="display: flex;
            height: 48px;
            padding: 8px 16px;
            align-items: center;
            gap: 8px;
            border-radius: 12px;" class="btn btn-outline-primary" data-dismiss="modal">
                              Cancel
                            </button>

                            <button type="button" data-dismiss="modal" class="btn btn-primary" style="display: flex;
            height: 48px;
            padding: 8px 16px;
            align-items: center;
            gap: 8px;
            border-radius: 12px;" onclick="AddProjectLink()" id="AddLinkButton" disabled>
                              Add
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>


                    <script>
                      var projectData = {
                        owners: [],
                        teams: [],
                        krs: []
                      };
                      let employeeList = `<%-JSON.stringify(employeeList)%>`;
                      employeeList = JSON.parse(employeeList);
                      let EmployeeList = new Map();
                      employeeList.forEach((employee) => {
                        EmployeeList.set(employee._id, employee);
                      });

                      function ShowAssigneeFild() {
                        let assignId = projectData.assignedTo[0];
                        let employee = EmployeeList.get(assignId);
                        document.getElementById('Project_Assignee').innerHTML = employee.displayName;
                      }

                      function SetObjective(objectiveId, title) {
                        let objectiveBox = document.getElementById('ObjectiveBody');
                        objectiveBox.innerHTML = title
                        projectData.objectiveId = objectiveId;
                        let krbody = document.getElementById('DropDownKrs');
                        krbody.innerHTML = '';
                        projectData.krs = [];
                        let krs_all = krs.get(objectiveId);
                        for (let kr of krs_all) {
                          krbody.innerHTML += `<div
style="
  display: flex;
  flex-direction:column;
width: 100%;
padding: 12px 16px;
border-bottom: 1px solid var(--gray-300, #D0D5DD);
background: #FFF;
" onclick="SetKr('${kr._id}','${kr.title}')">
<div style="color: var(--gray-900, #101828);
font-size: 16px;
font-style: normal;
font-weight: 500;
line-height: 18px; /* 112.5% */
letter-spacing: 0.24px;">
${kr.title}
</div>
</div>`
                        }
                      }

                      ChangeTab(['Projects','Tasks','OKRs'],'<%=tab%>')
                      history.pushState({}, null, '?tab=<%=tab%>&activetab=<%=activeTab%>');
                        
                      function SetKr(id, title) {
                        for (let kr of projectData.krs) {
                          if (kr == id)
                            return;
                        }

                        document.getElementById(
                          "KRSBody"
                        ).innerHTML += `<div class="teamBox" id='ProjectKR${id}'>${title} <img src="../Performance dashboard Icons/TeamCross.svg" onclick="RemoveFromProjectKR('${id}')"></div>`;
                        projectData.krs.push(id);
                      }

                      function RemoveFromProjectKR(id) {
                        document.getElementById(`ProjectKR${id}`).remove();
                        const index = projectData.krs.findIndex((kr) => kr === id);
                        if (index != -1)
                          projectData.krs.splice(index, 1);
                      }

                      function ChangeModalData(value) {
                        projectData = value;
                        document.getElementById('Project_Title') = projectData.title ? projectData.title : '';
                        document.getElementById('Project_StartDate') = projectData.startDate ? projectData.startDate : '';
                        document.getElementById('Project_EndDate') = projectData.endDate ? projectData.endDate : '';
                        document.getElementById('Project_Assignee') = projectData.assignedTo ? projectData.assignedTo : 'Select Employee';
                        document.getElementById('Project_Objectives') = projectData.objectiveId ? projectData.objectiveId : '';
                        document.getElementById('Project_Description') = projectData.description ? projectData.description : '';
                        document.getElementById('Project_LinkFileBody') = '';
                        for (let files of projectData.files) {
                          file = files;
                          UpdateFilebody();
                        }
                        for (let links of projectData.links) {
                          Link = files;
                          UpdateLinkbody();
                        }
                      }

                      function MakeSubmitButtonAble() {

                        let button = document.getElementById('Project_Submit');
                        if (projectData.title?.length > 0 && projectData.startDate?.length > 0 && projectData.endDate?.length > 0 && projectData.owners?.length > 0) {
                          button.disabled = false;
                        } else {
                          button.disabled = true;
                        }
                      }
                      var tab_='<%=tab%>'
                      var activeTab_='<%=activeTab%>';

                      function ChangeTab(types, type) {
                        
                        let tabs = [];
                        let bodies = [];

                        // Initialize the tabs and bodies arrays
                        for (let i = 0; i < types.length; i++) {
                          tabs[i] = document.getElementById(types[i] + 'Tab');
                          bodies[i] = document.getElementById(types[i] + 'Body');
                        }

                        // Loop through the tabs and bodies to show/hide them
                        for (let i = 0; i < tabs.length; i++) {
                          if (types[i] === type) {
                            tabs[i].classList.add('activeTab');
                            bodies[i].style.display = 'flex';
                          } else {
                            tabs[i].classList.remove('activeTab');
                            bodies[i].style.display = 'none';
                          }
                        }

                        if(type=='OKRs')
                        DisableIconsIfAtEnd()
                        if(type=='Tasks' || type=='Projects' || type=='OKRs')
                        {
                        tab_=type,history.pushState({}, null, `?tab=${type}`);
                        }

                        else{
                         activeTab_=type,
                          history.pushState({}, null, `?tab=${tab_}&activetab=${activeTab_}`);
                        }
                      }


                      function OpenFileInput(id) {
                        document.getElementById(id).click();
                      }

                      projectData.links = [];
                      projectData.files = [];
                      let Link = {},
                        file = {};

                      function ChangeLinkContent(type, value) {
                        Link[type] = value;
                        MakeLinkButtonAble();

                      }


                      function AddProjectLink() {
    let id = generateRandomId();
    Link.id = id;
    projectData.links.push(Link);
    UpdateLinkbody();
   
  }

                      function AddProjectFile() {
                        let id = generateRandomId();
                        file.id = id;
                        projectData.files.push(file);
                        UpdateFilebody();
                      }

                      function MakeLinkButtonAble() {
                        if (Link.title?.length > 0 && Link.url?.length > 0) {
                          document.getElementById('AddLinkButton').disabled = false;
                        } else {
                          document.getElementById('AddLinkButton').disabled = true;
                        }
                      }


                      function generateRandomId() {
                        return '_' + Math.random().toString(36).substr(2, 9);
                      }

                      function UpdateLinkbody() {
                        let id = Link.id;
                        let body = document.getElementById('Project_LinkFileBody');
                        let innerhtmlfile = `
      <div style="display: flex;
                padding: 12px 16px;
                align-items: center;
                gap: 12px;
                flex: 1 0 0;
                border-radius: 12px;
                border: 1px solid #ECECEC;
                background: #FFF;" onmouseover="showIcons('.Icons-${id}')" onmouseout="removeIcons('.Icons-${id}')" id='link-${id}'>
        <img src="../Performance dashboard Icons/Link Added.svg">
        <div style="display: flex;
                  flex-direction: column;
                  align-items: flex-start;
                  gap: 4px;
                  flex: 1 0 0;">
          <div style="align-self: stretch;
                    color: var(--content-on-light-primary, #181818);
                    font-size: 16px;
                    font-style: normal;
                    font-weight: 600;
                    line-height: 17.352px;">
            ${Link.title}
          </div>
          <div style="display: -webkit-box;
                    -webkit-box-orient: vertical;
                    -webkit-line-clamp: 1;
                    align-self: stretch;
                    overflow: hidden;
                    color: var(--content-on-light-secondary, #898989);
                    text-overflow: ellipsis;
                    font-size: 12px;
                    font-style: normal;
                    font-weight: 500;
                    line-height: 17.352px;">
            ${Link.url}
          </div>
        </div>
        <img src='../Project icons/Edit.svg' style="display:none" class='Icons-${id}' onclick='EditLink("${id}")' data-target='#AddProjectLink' data-toggle='modal'>
        <img src='../Project icons/Delete.svg' style="display:none" class='Icons-${id}' onclick='RemoveLink("${id}")'>
      </div>`;

                        body.insertAdjacentHTML('afterbegin', innerhtmlfile);
                      }

                      function UpdateFilebody() {
                        let id = file.id;
                        let body = document.getElementById('Project_LinkFileBody');
                        let innerhtmlfile = `
      <div style="display: flex;
                padding: 12px 16px;
                align-items: center;
                gap: 12px;
                flex: 1 0 0;
                border-radius: 12px;
                border: 1px solid #ECECEC;
                background: #FFF;" onmouseover="showIcons('.Icons-${id}')" onmouseout="removeIcons('.Icons-${id}')" id='file-${id}'>
        <img src="../Performance dashboard Icons/Document Added.svg">
        <div style="display: flex;
                  flex-direction: column;
                  align-items: flex-start;
                  gap: 4px;
                  flex: 1 0 0;">
          <div style="align-self: stretch;
                    color: var(--content-on-light-primary, #181818);
                    font-size: 16px;
                    font-style: normal;
                    font-weight: 600;
                    line-height: 17.352px;">
            ${file.title}
          </div>
          <div style="display: -webkit-box;
                    -webkit-box-orient: vertical;
                    -webkit-line-clamp: 1;
                    align-self: stretch;
                    overflow: hidden;
                    color: var(--content-on-light-secondary, #898989);
                    text-overflow: ellipsis;
                    font-size: 12px;
                    font-style: normal;
                    font-weight: 500;
                    line-height: 17.352px;">
            ${file.url}
          </div>
        </div>
        <img src='../Project icons/Delete.svg' style="display:none" class='Icons-${id}' onclick='RemoveFile("${id}")'>
      </div>`;

                        body.insertAdjacentHTML('afterbegin', innerhtmlfile);
                      }



                      function ChangeProjectData(type, value) {
                        projectData[type] = value;
                        MakeSubmitButtonAble();
                      }

                      function RemoveFile(fileid) {
                        let id = `file-${fileid}`
                        const body = document.getElementById(id);
                        body.remove();
                        const index = projectData.files.findIndex((file) => file.id === fileid);
                        if (index != -1)
                          projectData.files.splice(index, 1);

                      }

                      function RemoveLink(linkid) {
                        let id = `link-${linkid}`
                        const body = document.getElementById(id);
                        body.remove();
                        const index = projectData.links.findIndex((link) => link.id === linkid);
                        if (index != -1)
                          projectData.links.splice(index, 1);
                      }

                      function EditLink(linkid) {
                        const index = projectData.links.findIndex((link) => link.id === linkid);
                        Link = projectData.links[index];
                        RemoveLink(linkid);
                        document.getElementById('link-title').value = Link.title;
                        document.getElementById('link-link').value = Link.url;
                      }

                      function showIcons(classname) {
                        const box = document.querySelectorAll(classname);
                        box.forEach((element) => {
                          element.style.display = 'flex';
                        });
                      }

                      function removeIcons(classname) {
                        const box = document.querySelectorAll(classname);
                        box.forEach((element) => {
                          element.style.display = 'none';
                        });
                      }


                      async function handleProjectFileSelect(event) {
                        try {
                          let data = event.target.files[0];
                          let filelink = await handleFileUpload(data);
                          file.title = data.name;
                          file.url = filelink;
                          AddProjectFile();
                        } catch (error) {
                          console.log(error)
                        }
                      }




                      async function handleFileUpload(file) {
                        const formData = new FormData();
                        formData.append('file', file);
                        try {
                          const uploadType = "EmployeeProject";
                          const urlRes = await fetch(
                            `/aws/get/preSignedUrl?fileName=${file.name}t&contentType=${file.type}&uploadType=${uploadType}`, {
                              method: "GET",
                            }
                          );
                          const urlData = await urlRes.json();
                          const response = await fetch(urlData.url, {
                            method: "PUT",
                            headers: {
                              "Content-Type": file.type,
                            },
                            body: file,
                          });
                          let url = `https://dvfkpf9qxfl09.cloudfront.net/${urlData.key}`;

                          return url;
                        } catch (error) {
                          console.error('Error during file upload:', error);
                        }
                      }

                      async function CreateProject() {
                        try {
                          let response = await fetch('/create/project', {
                            method: 'POST',
                            headers: {
                              'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(projectData)
                          })
                          response = await response.json();
                          if (response.status == 200) {
                            $("#successModal").modal('show');
                            projectData = response;
                            location.reload();
                          }
                        } catch (error) {
                          console.log(error);
                          $("#errorModal").modal('show');
                        }
                      }


                      function SelectProjectTeams(employees, name, id) {
                        if (employees == 'team') {
                          for (let team of teams) {
                            if (team._id == id) {
                              employees = team.employees;
                              break;
                            }
                          }
                        }
                        
                        for (let i = 0; i < projectData.teams?.length; i++) {
                          if (projectData.teams[i].id == id)
                            return;
                        }
                        document.getElementById(
                          "ProjectTeamSelected"
                        ).innerHTML += `<div class="teamBox" id='ProjectTeam${id}'>${name} <img src="../Performance dashboard Icons/TeamCross.svg" onclick="RemoveFromProjectTeam('${id}')"></div>`;
                        projectData.teams.push({
                          title: name,
                          employees: employees,
                          id: id
                        });
                      }

                      function RemoveFromProjectTeam(id) {
                        for (let i = 0; i < projectData.teams?.length; i++) {
                          if (projectData.teams[i].id == id) {
                            projectData.teams.splice(i, 1);
                            break;
                          }
                        }
                        document.getElementById(`ProjectTeam${id}`).remove();

                      }

                      function SearchProjectTeams(value) {
                        
                        let body = document.getElementById("DropDownProjectTeams");
                        let innerHTML = "";

                        for (let team of teams) {
                          if (team.title.toLowerCase().includes(value.toLowerCase())) {
                            innerHTML += `<div style="display: flex;
                padding: 8px;
                align-items: center;
                gap: 10px;
                align-self: stretch;" onclick="SelectProjectTeams('team','${team.title}','${team._id}')">
                      <img src="../Performance dashboard Icons/teams_icon.svg">
                      <div style="display: flex;
                flex-direction: column;
                align-items: flex-start;">
                        <div style="color: var(--gray-700, #344054);
                
                font-size: 14px;
                font-style: normal;
                font-weight: 600;
                line-height: 20px; /* 142.857% */">${team.title}</div>
                        <div style="display: -webkit-box;
width: 85px;
-webkit-box-orient: vertical;
-webkit-line-clamp: 1;
overflow: hidden;
color: var(--text-content-secondary, #898989);
text-overflow: ellipsis;

font-size: 14px;
font-style: normal;
font-weight: 600;
line-height: normal;">`;

                            for (let employeeId of team.employees) {
                              innerHTML += `${EmployeeMap.get(employeeId)},`;
                            }
                            innerHTML += ` </div>
                      </div>
                    </div>`;
                          }
                        }
                        for (let employee of employeeList_OKR) {
                          if (employee.displayName.toLowerCase().includes(value.toLowerCase())) {
                            innerHTML += `<div style="display: flex;
                  padding: 8px;
                  cursor: pointer;
                  align-items: center;
                  gap: 10px;
                  align-self: stretch;" onclick="SelectProjectTeams(['${employee._id}'],'${employee.displayName}','${employee._id}')">
                      <img style="display: flex;
                  width: 32px;
                  height: 32px;
                  flex-direction: column;
                  justify-content: center;
                  align-items: center;
                  border-radius: 200px;" src="${employee.image}">
                      <div style="display: flex;
                  flex-direction: column;
                  white-space: nowrap;
                  align-items: flex-start;">
                        <div style="color: var(--gray-700, #344054);
                 font-size: 14px;
                 font-style: normal;
                 font-weight: 600;
                 line-height: 20px; /* 142.857% */
                 ">${employee.displayName}</div>
                        <div style="color: var(--gray-500, #667085);
                 
                 font-size: 12px;
                 font-style: normal;
                 font-weight: 400;
                 line-height: 18px; /* 150% */">${employee.team}</div>
                      </div>
                    </div>
                    <div style="height: 1px;
                 align-self: stretch;
                 background: var(--gray-200, #EAECF0)"></div>`;
                          }
                        }
                        body.innerHTML = innerHTML;
                      }

                      function SelectProjectOwner(id, name) {
                        
                        document.getElementById("ProjectOwners").value = name;
                        projectData.owners = [id];
                      }

                      function SearchProjectOwners(value) {
                        console.log(value);
                        let body = document.getElementById("DropDownProjectOwners");
                        let innerHTML = "";

                        for (let employee of employeeList_OKR) {
                          if (employee.displayName.toLowerCase().includes(value.toLowerCase())) {
                            innerHTML += `<div style="display: flex;
                  padding: 8px;
                  cursor: pointer;
                  align-items: center;
                  gap: 10px;
                  align-self: stretch;" onclick="SelectProjectOwner('${employee._id}','${employee.displayName}')">
                      <img style="display: flex;
                  width: 32px;
                  height: 32px;
                  flex-direction: column;
                  justify-content: center;
                  align-items: center;
                  border-radius: 200px;" src="${employee.image}">
                      <div style="display: flex;
                  flex-direction: column;
                  white-space: nowrap;
                  align-items: flex-start;">
                        <div style="color: var(--gray-700, #344054);
                 font-size: 14px;
                 font-style: normal;
                 font-weight: 600;
                 line-height: 20px; /* 142.857% */
                 ">${employee.displayName}</div>
                        <div style="color: var(--gray-500, #667085);
                 
                 font-size: 12px;
                 font-style: normal;
                 font-weight: 400;
                 line-height: 18px; /* 150% */">${employee.team}</div>
                      </div>
                    </div>
                    <div style="height: 1px;
                 align-self: stretch;
                 background: var(--gray-200, #EAECF0)"></div>`;
                          }
                        }
                        body.innerHTML = innerHTML;
                      }
                    function  SearchProject()
                    {
                      let value = document.getElementById('SearchProject').value;
                      console.log(value)
                      let projects=document.querySelectorAll('.project');
                      let projectsTitle=document.querySelectorAll('.projecttitle');
                      for(let i=0;i<projectsTitle.length;i++)
                      {
                        if(projectsTitle[i].innerHTML.toLowerCase().includes(value.toLowerCase()))
                        {
                          projects[i].style.display='flex';
                        }
                        else
                        {
                          projects[i].style.display='none';
                        }
                      }
                      
                      
                    }



                      // $('.dropdown-toggle').dropdown()
                    </script>

                    <!-- Include JavaScript files -->
                    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
                    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
                    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>

                    <!-- Core JS - includes jquery, bootstrap, popper, in-view and sticky-kit -->
                    <script src="../js/purpose.core.js"></script>
                    <!-- Page JS -->
                    <script src="../libs/autosize/dist/autosize.min.js"></script>

                    <script src="../libs/bootstrap-tagsinput/dist/bootstrap-tagsinput.min.js"></script>
                    <script src="../libs/progressbar.js/dist/progressbar.min.js"></script>
                    <script src="../libs/apexcharts/dist/apexcharts.min.js"></script>
                    <script src="../libs/moment/min/moment.min.js"></script>

                    <script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
                    <script src="../libs/fullcalendar/dist/fullcalendar.min.js"></script>
                    <!-- Purpose JS -->
                    <script src="../js/purpose.js"></script>
                    <!-- Demo JS - remove it when starting your project -->
                    <script src="../js/demo.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.min.js"></script>





</body>

</html>