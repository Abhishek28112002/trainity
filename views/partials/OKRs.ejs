<style>
  .normalText {
    color: var(--gray-500, #667085);
    font-size: 16px;
    font-style: normal;
    font-weight: 500;
    line-height: 20px;
    /* 125% */
  }

  .fa-trash:hover {
    color: var(--Red, #FF6565);
  }


  .pillerBox:hover {

    border: 4px solid var(--success-100, #D1FADF);
 }

  .dropdown_tab_inactive {
    display: flex;
    padding: 10px 16px;
    align-items: center;
    gap: 8px;
    align-self: stretch;
    border-bottom: 1px solid var(--gray-300, #D0D5DD);
    background: var(--White, #FFF);
    /* Shadow/xs */
    box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05);
    color: var(--gray-400, #98A2B3);
    font-size: 14px;
    font-style: normal;
    font-weight: 500;
    line-height: 20px;
    /* 142.857% */

  }

  .dropdownImage:hover {
    background: #D1FADF;
    padding: 2px;
    border-radius: 4px;
  }
</style>

<div id="OKRsBody" style="display: none;gap:24px;flex-direction: column;" class="tabbody">
  <div style="display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 24px;
    width: 100%;
    align-self: stretch;">
    <div style="display: flex;align-items: center;width:100%;justify-content: space-between;white-space: nowrap;overflow: auto;">
      <div style="display: flex;
    justify-content: flex-start;
    align-items: center;
    align-self: stretch;" id="CompnayDivisionTitles">

      </div>
      <div style="
    display: flex;
    padding: 12px;
    cursor: pointer;
    justify-content: center;
    align-items: center;
    gap: 8px;" class="activeText dropdownImage" onclick="AddCompnayDivision()"> <i class="fa fa-plus " aria-hidden="true"></i> Add</div>
    </div>
  </div>
  <div style="display: flex;align-items: center;">
  <div style="display: flex;
align-items: center;
justify-content: center;
background-color: #48bf84;
 color: white;
 border-radius: 4px;
width: 40px;
position: absolute;
cursor: pointer;
height: 40px;" class="LeftIcontoMovePillers" onclick="MovePillers(-1)">
        <i class="fa fa-angle-left" style="font-size: 18px;"></i>
      </div>
  <div style="display: flex;align-items: center;width: 100%;scroll-behavior: smooth;
transition: scroll-behavior 0.5s;
gap:24px;
align-items: center;overflow:auto;width: 100%;" id="PillersBody">

 
  </div>
  <div style="display: flex;
 align-items: center;
 justify-content: center;
 background-color: #48bf84;
 color: white;
 border-radius: 4px;
 width: 40px;
 right: 0px;
 position: absolute;
 cursor: pointer;
 height: 40px;" class="RightIcontoMovePillers" onclick="MovePillers(1)">
        <i class="fa fa-angle-right" style="font-size: 18px;"></i>
      </div>
    </div>
  <%- include('./Create-Objectives-okrs') -%>
</div>

<!-- A Delete Team Confirmation Modal -->

<div class="modal docs-example-modal" tabindex="-1" id="DeleteTeamConfirmation" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal">
    <div class="modal-content" id="myModalsm" style="border-radius: 12px;width:400px">
      <div class="modal-header">
        <div style="
                  color: var(--text-content-primary, #181818);
                  font-size: 16px;
                  font-style: normal;
                  font-weight: 600;
                  line-height: 130%;
                ">
          Delete Team Confirmation
        </div>
      </div>
      <div class="modal-body">
        <div style="
                color: var(--gray-600, #475467);
font-size: 14px;
font-style: normal;
font-weight: 700;
line-height: 135%; /* 18.9px */
letter-spacing: 0.14px;


                ">
          Are you sure you want to delete this team?
        </div>
        <div style="color: var(--gray-600, #475467);
            font-size: 14px;
            font-style: normal;
            font-weight: 500;
            line-height: 135%; /* 18.9px */
            letter-spacing: 0.14px;">Deleting the team will permanently remove all associated members</div>
      </div>
      <div style="display: flex; flex-direction: row; gap: 10px;padding:0.7rem;width: 400px;" class="modal-footer">
        <button type="button" class="btn btn-outline-secondary heading" style="display: flex;
            padding: 8px 16px;
            justify-content: center;
            align-items: center;
            gap: 8px;
            flex: 1 0 0;
            align-self: stretch;
            border-radius: var(--radius-medium, 8px);
            color: var(--gray-700, #344054);
text-align: center;
font-size: 14px;
font-style: normal;
font-weight: 600;
line-height: normal;

            border: 1px solid var(--gray-300, #D0D5DD);" data-dismiss="modal">
          Cancel
        </button>
        <button type="button" class="btn" style="
                display: flex;
height: 46px;
padding: 10px 16px;
justify-content: center;
align-items: center;
gap: 8px;
color: var(--content-inverted-primary, #FFF);
text-align: center;
font-size: 14px;
font-style: normal;
font-weight: 600;
line-height: 20px; /* 142.857% */
letter-spacing: 0.1px;
flex: 1 0 0;
border-radius: var(--radius-medium, 8px);
background: var(--Red, #FF6565);
                " data-dismiss="modal" onclick="RemoveCompany()">
          Delete Company
        </button>
      </div>
    </div>
  </div>
</div>
<!-- Deleting Strategic pillar Confirmation Modal -->

<div class="modal docs-example-modal" tabindex="-1" id="DeletingStrategicpillarConfirmation" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal">
    <div class="modal-content" id="myModalsm" style="border-radius: 12px;width:400px">
      <div class="modal-header">
        <div style="
            color: var(--text-content-primary, #181818);
            font-size: 16px;
            font-style: normal;
            font-weight: 600;
            line-height: 130%;
          ">
          Deleting Strategic pillar Confirmation
        </div>
      </div>
      <div class="modal-body">
        <div style="
          color: var(--gray-600, #475467);
font-size: 14px;
font-style: normal;
font-weight: 700;
line-height: 135%; /* 18.9px */
letter-spacing: 0.14px;


          ">
          Are you sure you want to delete this Strategic pillar ?
        </div>
        <div style="color: var(--gray-600, #475467);
      font-size: 14px;
      font-style: normal;
      font-weight: 500;
      line-height: 135%; /* 18.9px */
      letter-spacing: 0.14px;">Deleting the Strategic pillar will permanently remove all associated Objectives</div>
      </div>
      <div style="display: flex; flex-direction: row; gap: 10px;padding:0.7rem;width: 400px;" class="modal-footer">
        <button type="button" class="btn btn-outline-secondary heading" style="display: flex;
      padding: 8px 16px;
      justify-content: center;
      align-items: center;
      gap: 8px;
      flex: 1 0 0;
      align-self: stretch;
      border-radius: var(--radius-medium, 8px);
      color: var(--gray-700, #344054);
text-align: center;
font-size: 14px;
font-style: normal;
font-weight: 600;
line-height: normal;

      border: 1px solid var(--gray-300, #D0D5DD);" data-dismiss="modal">
          Cancel
        </button>
        <button type="button" class="btn" style="
          display: flex;
height: 46px;
padding: 10px 16px;
justify-content: center;
align-items: center;
gap: 8px;
color: var(--content-inverted-primary, #FFF);
text-align: center;
font-size: 14px;
font-style: normal;
font-weight: 600;
line-height: 20px; /* 142.857% */
letter-spacing: 0.1px;
flex: 1 0 0;
border-radius: var(--radius-medium, 8px);
background: var(--Red, #FF6565);
          " data-dismiss="modal" onclick="DeletePillerApi()">
          Delete
        </button>
      </div>
    </div>
  </div>
</div>

<button id="ChangeTeamNameModalButton" style="display: none;" data-target="#ChangeTeamNameModal" data-toggle="modal"></button>


<div class="modal docs-example-modal-sm" tabindex="-1" id="ChangeTeamNameModal" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-sm">
    <div class="modal-content" id="myModalsm" style="border-radius: 12px;width: 400px;">
      <div class="modal-header">
        <div style="
                      color: var(--text-content-primary, #181818);
                      font-size: 16px;
                      font-style: normal;
                      font-weight: 600;
                      line-height: 130%;
                    ">
          Rename Team Confirmation
        </div>
      </div>
      <div class="modal-body" style="display: flex;
        align-items: flex-start;
        gap: 6px;
        justify-content: center;
        flex-direction: column;">

        <div style="color: var(--gray-600, #475467);
                font-size: 14px;
                font-style: normal;
                font-weight: 500;
                line-height: 135%; /* 18.9px */
                letter-spacing: 0.14px;">Are you sure you want to Rename this team?</div>
        <div style="color: var(--gray-600, #475467);
      
                 font-size: 14px;
                 align-self: stretch;
                 font-style: normal;
                 font-weight: 500;
                 line-height: 135%; /* 18.9px */
                 letter-spacing: 0.14px;">
          Renaming the team will change the team name at all associated places
        </div>
      </div>

      <div style="display: flex; flex-direction: row; gap: 10px;padding:0.7rem;;width: 400px" class="modal-footer">
        <button type="button" class="btn btn-outline-secondary heading" style="display: flex;
                padding: 8px 16px;
                justify-content: center;
                align-items: center;
                gap: 8px;
                flex: 1 0 0;
                align-self: stretch;
                border-radius: var(--radius-medium, 8px);
                color: var(--gray-700, #344054);
    text-align: center;
    font-size: 14px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    
                border: 1px solid var(--gray-300, #D0D5DD);" data-dismiss="modal">
          Cancel
        </button>
        <button type="button" class="btn" style="
                    display: flex;
    height: 46px;
    padding: 10px 16px;
    justify-content: center;
    align-items: center;
    gap: 8px;
    color: var(--content-inverted-primary, #FFF);
    text-align: center;
    font-size: 14px;
    font-style: normal;
    font-weight: 600;
    line-height: 20px; /* 142.857% */
    letter-spacing: 0.1px;
    flex: 1 0 0;
    border-radius: var(--radius-medium, 8px);
background: var(--brand-primary, #48BF84);
                    " data-dismiss="modal" onclick="ChangeCompanyName()">
          Save
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  
  let companyName_js ;
  let Pillers ;
  async function GetDataCP()
  {
    let response =await fetch('/getDataCP');
    response=await response.json();
    companyName_js=response.companies;
    Pillers=response.Pillers;
    SetNormal()
  }
  GetDataCP();
  let currentTab_js = 0;
  let NewCompanies = 'Company '
  let StrategicPillarsId='';
   
  async function SetNormal()
  {
    if (companyName_js.length == 0) {
        await AddCompnayDivision();
        setCompnayDivision();
    }
    else{
      setCompnayDivision();
    }
  }
  
 function MovePillers(i)
 {
  if(i>0)
 document.getElementById("PillersBody").scrollLeft += 300;
 else
  document.getElementById("PillersBody").scrollLeft -= 300;
  DisableIconsIfAtEnd()
 }
 function DisableIconsIfAtEnd()
 {
  if(document.getElementById("PillersBody").scrollLeft==0)
  console.log("hi1"),document.getElementsByClassName("LeftIcontoMovePillers")[0].style.display="none";
  else
  console.log("hi"),document.getElementsByClassName("LeftIcontoMovePillers")[0].style.display="flex";
  if(document.getElementById("PillersBody").scrollLeft==document.getElementById("PillersBody").scrollWidth-document.getElementById("PillersBody").offsetWidth)
  console.log("bi1"),document.getElementsByClassName("RightIcontoMovePillers")[0].style.display="none";
  else
  console.log("bi"),document.getElementsByClassName("RightIcontoMovePillers")[0].style.display="flex";
 // console.log(document.getElementById("PillersBody").scrollLeft,document.getElementById("PillersBody").scrollWidth,document.getElementById("PillersBody").offsetWidth) 
}
 
  
  function SetStrategicPillarsId(StrategicPillarId)
  {
    StrategicPillarsId=StrategicPillarId;
    title=document.getElementById('pilerTitle'+StrategicPillarsId).value;
    Showokrs(StrategicPillarsId,title);
    DisableIconsIfAtEnd()
  }

  async function AddCompnayDivision() {
    let CompanyName = `${NewCompanies}${companyName_js.length > 0 ? companyName_js.length : ''}`;
    let company = await CreateCompanyApi(CompanyName);
    companyName_js.push(company);
    NewCompanies = 'Company ';
    Pillers.push([]);
    ChangeTabStyles(companyName_js.length - 1);
    AddPiler()
  }


  function setCompnayDivision() {
    let CompnayDivisionTitles = document.getElementById('CompnayDivisionTitles');
    let innerHTML = '';

    for (let i = 0; i < companyName_js.length; i++) {
      innerHTML += `<div style="
            display: flex;
            padding: 12px;
            justify-content: center;
            align-items: center;
            gap: 8px;
            font-size: 16px;
            font-style: normal;
            font-weight: 600;
            line-height: 24px;" class="${currentTab_js ==i ? 'activePiller' : 'normalText'} teamTab" onclick="ChangeTabStyles('${i}')" id="${i}" draggable="true" >${companyName_js[i].title} `

      if (currentTab_js == i) {
        innerHTML += `<img src="../Performance dashboard Icons/ThreeDotGreen.svg" class="dropdownImage"  ${(currentTab_js == i)?'data-toggle="dropdown" aria-expanded="false"':''} id='threeDot${i}'>
                <div aria-labelledby='threeDot${i}' class="dropdown-menu" style="flex-direction: column;
                align-items: flex-start;margin-top: 50px;
                border: 1px solid var(--gray-300, #D0D5DD);
                border-radius: var(--radius-medium, 8px) var(--radius-medium, 8px) 8px;
                border-bottom: 1px solid var(--gray-300, #D0D5DD);
                " class="container_Style">
                <div class="dropdown_tab_active" onclick="EnableRename()">
                <img src="../Performance dashboard Icons/dropdown_edit.svg"> Rename
                </div>
                <div class="dropdown_tab_active" data-toggle="modal" data-target="#DeleteTeamConfirmation" onclick="setToDelete('${i}',event)">
                <img src="../Performance dashboard Icons/dropdown_delete.svg"> Delete
                </div>
                <div class="${i == companyName_js.length-1 ? 'dropdown_tab_inactive' : 'dropdown_tab_active'}" onclick="MoveRight()" ${i == companyName_js.length-1?'disabled':''} >
                <i class="fa fa-arrow-right" aria-hidden="true"></i> Move to Right
                </div>
                <div class="${i == 0 ? 'dropdown_tab_inactive' : 'dropdown_tab_active'}" style="border-bottom:none;" onclick="MoveLeft()" ${i ==0 ?'disabled':''}>
                <i class="fa fa-arrow-left" aria-hidden="true"></i> Move to Left
                </div>
                </div>`;
      }
      innerHTML += `</div>`
    }
    CompnayDivisionTitles.innerHTML = innerHTML;
    MakeCenterPillers();
    ShowPilers();
    //ImplementDragAndDropForTeams();
  }

 

  function ChangeTabStyles(companyIndex) {
  
    if (companyIndex == currentTab_js) return
    currentTab_js = parseFloat(companyIndex);
    // document.getElementById('CompanyTitle').innerText=companyName_js[currentTab_js].title;
    setCompnayDivision();
  }

  function MakeCenterPillers() {
    const CompnayDivisionList = document.getElementById('CompnayDivisionTitles');
    const activePiller = document.querySelector('.activePiller');

    if (activePiller) {
      const scrollLeft = activePiller.offsetLeft - (CompnayDivisionList.offsetWidth / 2) + (activePiller.offsetWidth / 2);
      CompnayDivisionList.scrollLeft = scrollLeft;
    }
  }



  function EnableRename() {

    document.getElementById(currentTab_js).innerHTML = `<input id='Piller${currentTab_js}' style="border-radius: 4px;
border: 1px solid var(--brand-primary, #48BF84);width:100%;height:100%;background: transparent;color: #48bf84;" onchange="SetPillerNamedumy('Piller${currentTab_js}','')" type="text"  value="${companyName_js[currentTab_js].title}" onkeydown="SetPillerNamedumy('Piller${currentTab_js}',event)">`
  }
  let changednameofteam = '';

  async function ChangeCompanyName() {
    try {
      let perv_name = companyName_js[currentTab_js].title;
      let new_name = changednameofteam;
      companyName_js[currentTab_js].title = changednameofteam;
      DisableRename();
      setCompnayDivision();
     
      let response = await fetch('/update/companyName', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          perv_name,
          new_name
        })
      })
      response = await response.json();
    } catch (error) {
      console.log(error);
    }

  }


  function SetPillerNamedumy(id, event) {
    if (event != '' && event.key != "Enter") {
      return;
    }
    changednameofteam = document.getElementById(id).value;
    let button = document.getElementById('ChangeTeamNameModalButton')
    button.click();
  }

  function DisableRename() {
    document.getElementById(currentTab_js).innerHTML = companyName_js[currentTab_js].title;
  }
  let to_delete = '';

  function setToDelete(type, e) {
    e.preventDefault();
    to_delete = type;
  }

  function updateTeamNameJs(teamNames) {
    // console.log(teamNames)
    const updatedTeamNameJs = {};

    for (const teamName of teamNames) {
      updatedTeamNameJs[teamName] = companyName_js[teamName];
    }

    companyName_js = updatedTeamNameJs;
    TeamLists = teamNames;
    //console.log(companyName_js,TeamLists)
    // UpdateTeamOrder();
  }

  async function MoveLeft() {
    const currentIndex = parseFloat(currentTab_js);

    if (currentIndex > 0) {
      let temp = companyName_js[currentIndex].title;
      companyName_js[currentIndex].title = companyName_js[currentIndex - 1].title;
      companyName_js[currentIndex - 1].title = temp;
      temp = Pillers[currentIndex];
      Pillers[currentIndex] = Pillers[currentIndex - 1];
      Pillers[currentIndex - 1] = temp;
      ChangeTabStyles(currentIndex - 1);
      await UpdateCompanyOrder();

    }
  }



  async function MoveRight() {
    const currentIndex = parseFloat(currentTab_js);

    if (currentIndex < companyName_js.length - 1) {
      let temp = companyName_js[currentIndex].title;
      companyName_js[currentIndex].title = companyName_js[currentIndex + 1].title;
      companyName_js[currentIndex + 1].title = temp;
      temp = Pillers[currentIndex];
      Pillers[currentIndex] = Pillers[currentIndex + 1];
      Pillers[currentIndex + 1] = temp;
      ChangeTabStyles(currentIndex + 1);

      await UpdateCompanyOrder();
    }
  }
  async function UpdateCompanyOrder() {
    let CompanyList = [];
    for (let companyName of companyName_js) {
      CompanyList.push(companyName.title);
    }
    let response = await fetch('update/companyOrder', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        CompanyList
      }),
    })
  }
  async function SaveCompanyApi() {
    let companyNameData = {
      title: companyName_js[currentTab_js].title,
      srNo: currentTab_js
    }
    try {
      let response = await fetch('/create/company', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(companyNameData),
      })
      response = await response.json();
      console.log(response)
    } catch (error) {
      console.log(error);
    }
  }
  async function CreateCompanyApi(companyName) {
    let companyNameData = {
      title: companyName,
      srNo: companyName_js.length
    }
    try {
      let response = await fetch('/create/company', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(companyNameData),
      })
      response = await response.json();
      console.log(response)
      return response;
    } catch (error) {
      console.log(error);
    }
  }

  async function RemoveCompany() {
    try {
      let response = await fetch('/delete/company', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: companyName_js[currentTab_js]._id
        })
      })
      response = await response.json();
      console.log(response)
      companyName_js.splice(currentTab_js, 1);
      if (currentTab_js > companyName_js.length - 1)
        currentTab_js = companyName_js.length - 1;
      setCompnayDivision();
    } catch (error) {
      console.log(error);
    }
  }

  



  async function AddPiler() {
    
    let piller = await CreateNewPillerApi();
    Pillers[currentTab_js].push(piller);
    piller = Pillers[currentTab_js];
    CreatePillersBody(piller)
  }

  async function SavePillerApi(id) {
    let title = document.getElementById(`pilerTitle${id}`).value;
    let description = document.getElementById(`pilerDescription${id}`).value;
    let data = {};
    for (let i = 0; i < Pillers[currentTab_js].length; i++) {
      if (Pillers[currentTab_js][i]._id == id) {
        Pillers[currentTab_js][i].title = title;
        Pillers[currentTab_js][i].description = description;
        data = Pillers[currentTab_js][i];
        break;
      }
    }
    try {
      let response = await fetch('/create/strategicPillar', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })
      response = await response.json();
      console.log(response)
      return response;
    } catch (error) {
      console.log(error);
    }
  }
  async function CreateNewPillerApi() {
    let data = {
      CompanyId: (companyName_js[currentTab_js]._id).toString(),
    }
    try {
      let response = await fetch('/create/strategicPillar', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })
      response = await response.json();
      console.log(response)
      return response;
    } catch (error) {
      console.log(error);
    }
  }
  let deletepillerId;

  function SetDeletepillerId(id) {

    deletepillerId = id;
  }
  async function DeletePillerApi() {

    try {
      let response = await fetch('/create/strategicPillar', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          _id: deletepillerId
        }),
      })
      response = await response.json();
      
      let index;
      Pillers[currentTab_js].map((piller, i) => {
        if (piller._id == deletepillerId) {
          index = 1;
          Pillers[currentTab_js].splice(i, 1);
          return;
        }
      })
      ShowPilers()
    } catch (error) {
      console.log(error);
    }
  }
  async function ShowPilers() {
    let pillers_ = Pillers[currentTab_js];
    if (!pillers_)
      pillers_ = []

    CreatePillersBody(pillers_);
  }

  function CreatePillersBody(pillers) {
    let body = document.getElementById('PillersBody');
    let innerhtml = ''
    let title=''
    let okrsToShowPillerId=''
    for (let piller of pillers) {
       if(piller._id==StrategicPillarsId)
        okrsToShowPillerId=piller._id.toString(),title=piller.title;

      innerhtml += `
    <div style="display: flex;
min-width: 300px;
padding: 16px;
flex-direction: column;
align-items: flex-start;
gap: 16px;
border-radius: var(--radius-medium, 8px);
background: #FFF;
box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.06), 0px 1px 3px 0px rgba(16, 24, 40, 0.10);" onmouseover="showIcons('.pilerDeleteIcon${piller._id}')" onmouseout="removeIcons('.pilerDeleteIcon${piller._id}')" class="pillerBox"  id="pilller${piller._id}" onclick="SetStrategicPillarsId('${piller._id}')">
      <div style="display: flex;flex-direction: column;gap:8px;">
       <div style="display: flex;align-items: center;justify-content:space-between">
          <input type="text" placeholder="Click to edit title" style="align-self: stretch;
color: var(--gray-900, #101828);
border:none;
width:100%;
height:100%;
font-size: 20px;
font-style: normal;
font-weight: 700;
line-height: 30px; " id='pilerTitle${piller._id}' onchange="SavePillerApi('${piller._id}')" value='${piller.title}'>
<div id="pilerDeleteIcon${piller._id}" class="pilerDeleteIcon${piller._id}" data-target="#DeletingStrategicpillarConfirmation" data-toggle='modal' onclick="SetDeletepillerId('${piller._id}')"><i class="fa fa-trash" aria-hidden="true"></i></div>
        </div>
        <textarea style="align-self: stretch;
color: var(--gray-500, #667085);
font-size: 16px;
font-style: normal;
font-weight: 400;
border:none;
height:80px;
width:100%;
line-height: 20px; /* 125% */
letter-spacing: 0.16px;" placeholder="click to add description"  id='pilerDescription${piller._id}'  onchange="SavePillerApi('${piller._id}')">${piller.description}</textarea>
      </div>
      <div class="Projects" style="display: flex;
align-items: center;
gap: 12px;
justify-content: space-between;
align-self: stretch;">
        <div class="progressTask" style="width:80%">
          <div class="progress__fill" style="width:${piller.progress}%"></div>
        </div>
        <div style="color: var(--gray-700, #344054);
font-size: 14px;
font-style: normal;
font-weight: 600;
line-height: 28px; /* 200% */">${piller.progress}%</div>

      </div>
      <div style="display: flex;flex-direction: column;gap:8px;width: 100%;">
     
        <div style="display: flex;
                align-items: flex-start;
                gap: 8px;
                align-self: stretch;">
          <div style="flex: 1 0 0;
            color: var(--gray-600, #475467);
            font-size: 16px;
            font-style: normal;
            font-weight: 500;
            line-height: 20px; /* 125% */
            letter-spacing: 0.16px;">
            Objectives
          </div>
          <div style="color: var(--content-on-light-primary, #181818);
        text-align: center;
        font-size: 16px;
        font-style: normal;
        font-weight: 600;
        line-height: 130%; /* 20.8px */
        ">
        ${piller.objectives}</div>
        </div>
       
        <div style="display: flex;
                align-items: flex-start;
                gap: 8px;
                align-self: stretch;">
          <div style="flex: 1 0 0;
            color: var(--gray-600, #475467);
            font-size: 16px;
            font-style: normal;
            font-weight: 500;
            line-height: 20px; /* 125% */
            letter-spacing: 0.16px;">
            Projects
          </div>
          <div style="color: var(--content-on-light-primary, #181818);
        text-align: center;
        font-size: 16px;
        font-style: normal;
        font-weight: 600;
        line-height: 130%; /* 20.8px */
        ">
        ${piller.projects}</div>
        </div>
       
        <div style="display: flex;
                align-items: flex-start;
                gap: 8px;
                align-self: stretch;">
          <div style="flex: 1 0 0;
            color: var(--gray-600, #475467);
            font-size: 16px;
            font-style: normal;
            font-weight: 500;
            line-height: 20px; /* 125% */
            letter-spacing: 0.16px;">
            Initiatives
          </div>
          <div style="color: var(--content-on-light-primary, #181818);
        text-align: center;
        font-size: 16px;
        font-style: normal;
        font-weight: 600;
        line-height: 130%; /* 20.8px */
        ">
        ${piller.initiatives}</div>
        </div>
       
        <div style="display: flex;
                align-items: flex-start;
                gap: 8px;
                align-self: stretch;">
          <div style="flex: 1 0 0;
            color: var(--gray-600, #475467);
            font-size: 16px;
            font-style: normal;
            font-weight: 500;
            line-height: 20px; /* 125% */
            letter-spacing: 0.16px;">
            Tasks
          </div>
          <div style="color: var(--content-on-light-primary, #181818);
        text-align: center;
        font-size: 16px;
        font-style: normal;
        font-weight: 600;
        line-height: 130%; /* 20.8px */
        ">
        ${piller.tasks}</div>
        </div>
       
        </div>
        <div style="display: flex;
        align-items: flex-start;">
        ${piller.members ? piller.members.map((employee) => `
  <img style="
    display: flex;
    width: 32px;
    height: 32px;
    margin-left: -10px;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
    border-radius: 200px;
    border: 1.5px solid var(--White, #FFF)"
    src="${EmployeeMap.get(employee).image}">
`) : ''}

    </div>
</div>`;

    }

    innerhtml += `<div style="display: flex;
            padding: 103.133px 62.625px 102.867px 62.625px;
            cursor:pointer;
flex-direction: column;
justify-content: center;
align-items: center;
border-radius: var(--radius-medium, 8px);
border: 3px dashed var(--brand-primary, #48BF84);" onclick="AddPiler()">
<div style="display: flex;
padding: 12px;
flex-direction: column;
justify-content: center;
align-items: center;
">
<svg xmlns="http://www.w3.org/2000/svg" width="49" height="49" viewBox="0 0 49 49" fill="none">
    <path d="M24.8032 10.4561V38.4561M10.8032 24.4561H38.8032" stroke="#48BF84" stroke-width="3.99999" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>
  <div style="width: 150.75px;
  color: var(--brand-primary, #48BF84);
  text-align: center;
  font-size: 18px;
  font-style: normal;
  font-weight: 600;
  line-height: 30px;
  ">Add new strategic pillar</div>
</div>
</div>`
    body.innerHTML = innerhtml;
    if(pillers.length>0)
    {
      okrsToShowPillerId=pillers[0]._id;
     title=pillers[0].title;
    }
    else{
      okrsToShowPillerId=''
    }
   
    StrategicPillarsId=okrsToShowPillerId;
    Showokrs(okrsToShowPillerId,title)
    DisableIconsIfAtEnd()
  }


</script>