<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta
      name="description"
      content="Purpose Application UI is the following chapter we've finished in order to create a complete and robust solution next to the already known Purpose Website UI."
    />
    <meta name="author" content="Webpixels" />
    <title>Trainity Dashboard</title>
    <!-- Favicon -->
    <!-- Favicon -->
    <link rel="icon" href="../img/custom/favicon-32x32.jpg" type="image/png" />
    <!-- Font Awesome 5 -->
    <link
      rel="stylesheet"
      href="../../libs/@fortawesome/fontawesome-free/css/all.min.css"
    />
    <!-- Page CSS -->
    <!-- <link
      rel="stylesheet"
      href="../../libs/quill/dist/quill.core.css"
      type="text/css"
    /> -->
    <link rel="stylesheet" href="//cdn.quilljs.com/1.3.6/quill.bubble.css" />
    <link rel="stylesheet" href="../../libs/select2/dist/css/select2.min.css" />
    <link rel="stylesheet" href="../../libs/flatpickr/dist/flatpickr.min.css" />
    <!-- Purpose CSS -->
    <link rel="stylesheet" href="../../css/purpose.css" id="stylesheet" />
    <style>
        .level-div {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: 10px;
        margin-bottom: 1rem;
      }
    </style>
    <!-- Hotjar Tracking Code for Admin Website -->
<script>
  (function(h,o,t,j,a,r){
      h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
      h._hjSettings={hjid:3534926,hjsv:6};
      a=o.getElementsByTagName('head')[0];
      r=o.createElement('script');r.async=1;
      r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
      a.appendChild(r);
  })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
</script>
  </head>

  <body class="application application-offset" style="margin-left:300px;width: calc(100vw - 300px);padding:0 32px;background-color: white;" id="MainPageContent">
    <div
      class="modal fade fixed-right"
      id="modal-products"
      tabindex="-1"
      role="dialog"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-vertical" role="document">
        <div class="modal-content">
          <div class="scrollbar-inner">
            <div class="modal-body"></div>
          </div>
        </div>
      </div>
    </div>
    <!-- Application container -->
    <div  >
      <!-- Sidenav -->
      <%- include('partials/sidepanel'); -%>
      <!-- Content -->
      <div class="main-content footer-margin-mobile position-relative">
       

        <!-- Page content -->
        <div class="page-content">
          <div class="row justify-content-center">
            <div class="col-lg-8">
              <!-- Page title -->
              <div class="page-title">
                <div class="row justify-content-between align-items-center">
                  <div
                    class="col-md-6 d-flex align-items-center justify-content-between justify-content-md-start mb-3 mb-md-0"
                  >
                    <!-- Page title + Go Back button -->
                    <div class="d-inline-block">
                      <h5
                        class="h4 d-inline-block font-weight-400 mb-0 text-white"
                      >
                        Create Levels
                      </h5>
                    </div>
                    <!-- Additional info -->
                  </div>
                </div>
              </div>
              <%- include('partials/utility-modals'); -%>
              <form class="mt-4">
                <div class="card">
                  <div class="card-body">
                    <div class="form-group">
                        <label class="form-control-label">Employee ID</label>
                        <select
                          class="custom-select"
                          required
                          name="employeeID"
                          id="employeeID"
                        >
                          <% for(let i=0; i<employeeList.length; i++) { %>
                            <option value="<%= employeeList[i]._id %>"><%= employeeList[i].firstName + " " + employeeList[i].lastName %></option>
                          <% } %>
                         </select>
                      </div>
                      <div class="form-group">
                        <div
                          style="
                            display: grid;
                            grid-template-columns: 1fr auto;
                            margin-bottom: 1rem;
                          "
                        >
                          <label class="form-control-label">Levels</label>
                          <button
                            type="button"
                            class="btn btn-sm btn-primary"
                            onclick="addLevel()"
                          >
                            Add Level
                          </button>
                        </div>
                        <div id="levelList">
                          <div class="level level-div">
                            <div>
                              <input
                                type="number"
                                class="form-control level-badges"
                                style="margin-bottom: 1rem"
                                placeholder="Badges Required"
                              />
                              <input
                                type="text"
                                class="form-control level-title"
                                style="margin-bottom: 1rem"
                                placeholder="Level Title"
                              />
                              <textarea
                              class="form-control level-description"
                              name="description"
                              placeholder="Enter Level description"
                              rows="3"
                              resize="none"
                            ></textarea>
                              
                            </div>
                            <div style="align-items: center">
                              <button
                                type="button"
                                class="btn btn-danger"
                                onclick="removeLevel(this)"
                              >
                                Remove
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>

                   

                    <!-- level date -->
                    <!-- Button trigger modal -->
                    <button type="submit" class="btn btn-primary">
                      Create
                    </button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
       
      </div>
    </div>
    <!-- Scripts -->
    <!-- Core JS - includes jquery, bootstrap, popper, in-view and sticky-kit -->
    <script src="../../js/purpose.core.js"></script>
    <!-- Page JS -->
    <script src="../../libs/dropzone/dist/min/dropzone.min.js"></script>
    <script src="../../libs/bootstrap-tagsinput/dist/bootstrap-tagsinput.min.js"></script>
    <!-- <script src="../../libs/quill/dist/quill.min.js"></script> -->
    <script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="../../libs/select2/dist/js/select2.min.js"></script>
    <script src="../../libs/flatpickr/dist/flatpickr.min.js"></script>
    <!-- Purpose JS -->
    <script src="../../js/purpose.js"></script>
    <!-- Demo JS - remove it when starting your project -->
    <script src="../../js/demo.js"></script>

    <script>
        function addLevel() {
          var levelList = document.getElementById("levelList");
          var levelInput = document.createElement("div");
          levelInput.classList.add("level");
          levelInput.classList.add("level-div");
          levelInput.innerHTML = `
          
                            <div>
                              <input
                                type="number"
                                class="form-control level-badges"
                                style="margin-bottom: 1rem"
                                placeholder="Badges Required"
                              />
                              <input
                                type="text"
                                class="form-control level-title"
                                style="margin-bottom: 1rem"
                                placeholder="Level Title"
                              />
                              <textarea
                              class="form-control level-description"
                              name="description"
                              placeholder="Enter Level description"
                              rows="3"
                              resize="none"
                            ></textarea>
                              
                            </div>
                            <div style="align-items: center">
                              <button
                                type="button"
                                class="btn btn-danger"
                                onclick="removeLevel(this)"
                              >
                                Remove
                              </button>
                            </div>
                          
                            
                          
            `;
          levelList.appendChild(levelInput);
        }
  
        function removeLevel(button) {
          const element = button.parentNode.previousElementSibling;
          const parent = button.parentNode;
          element.remove();
          parent.remove();
        }
      </script>

    <script>
      const form = document.querySelector("form");

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const employeeID = form.employeeID.value;
        const levelDivs = document.querySelectorAll(".level");
        const levels = [];

        for (let i = 0; i < levelDivs.length; i++) {
          const badges = levelDivs[i].querySelector(".level-badges").value;
          const title = levelDivs[i].querySelector(".level-title").value;
          const description = levelDivs[i].querySelector(".level-description").value;
        
          if (title.length > 0)
            levels.push({
              badges,
              title,
              description,
            });
        }

        
        try {
          const response = await fetch("/create/level", {
            method: "POST",
            
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                employeeID,
                levels,
            }),
          });
          if (response.status === 200) {
            $("#loadingModal").modal("hide");
            $("#errorModal").modal("hide");
            $("#successModal").modal("show");
           
          } else {
            $("#loadingModal").modal("hide");
            $("#errorModal").modal("show");
            $("#successModal").modal("hide");
          }
        } catch (error) {
          $("#loadingModal").modal("hide");
          $("#errorModal").modal("show");
          $("#successModal").modal("hide");
          console.log(error);
        }
      });
    </script>
  </body>
</html>
